diabetes <- read.csv(https://inf.ug.edu.pl/~gmadejsk/IO2017/diabetes.csv)
diabetes <- read.csv("https://inf.ug.edu.pl/~gmadejsk/IO2017/diabetes.csv")
head(diabetes)
library(ggvis)
install.packages(ggvis)
install.packages("ggvis")
library(ggvis)
ls
library(class)
summary(diabetes)
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
head(diabetes)
diabetes
diabetes
iris
diabetes_norm <- as.data.frame(lapply(diabetes[1:8], normalize))
diabetes_norm
summary(diabetes_norm)
set.seed(1234)
ind <- sample(2, nrow(diabetes), replace=TRUE, prob=c(0.67, 0.33))
diabetes.training <- diabetes[ind==1, 1:8]
diabetes.test <- diabetes[ind==2, 1:8]
diabetes.test
diabetes.training
diabetes.trainLabels <- diabetes[ind==1,5]
diabetes.trainLabels <- diabetes[ind==1,5]
print(diabetes.trainLabels)
diabetes.testLabels <- diabetes[ind==2, 5]
diabetes.trainLabels <- diabetes[ind==1,5]
print(diabetes.testLabels)
diabetes_pred1 <- knn(train = diabetes.training, test = diabetes.test, cl = diabetes.trainLabels, k=1)
diabetes_pred3 <- knn(train = diabetes.training, test = diabetes.test, cl = diabetes.trainLabels, k=3)
diabetes_pred5 <- knn(train = diabetes.training, test = diabetes.test, cl = diabetes.trainLabels, k=5)
diabetes_pred11 <- knn(train = diabetes.training, test = diabetes.test, cl = diabetes.trainLabels, k=11)
diabetes_pred1
diabetes_pred3
diabetes_pred5
diabetes_pred11
diabetesTestLabels <- data.frame(diabetes.testLabels)
merge1 <- data.frame(diabetes_pred1, diabetes.testLabels)
merge3 <- data.frame(diabetes_pred3, diabetes.testLabels)
merge5 <- data.frame(diabetes_pred5, diabetes.testLabels)
merge11 <- data.frame(diabetes_pred11, diabetes.testLabels)
names(merge1) <- c("Predicted Class", "Observed Class")
names(merge3) <- c("Predicted Class", "Observed Class")
names(merge5) <- c("Predicted Class", "Observed Class")
names(merge11) <- c("Predicted Class", "Observed Class")
merge1
diabetes.trainLabels <- diabetes[ind==1,9]
diabetes.trainLabels <- diabetes[ind==1,9]
print(diabetes.testLabels)
diabetes.trainLabels <- diabetes[ind==1,9]
print(diabetes.testLabels)
diabetes.testLabels <- diabetes[ind==2, 9]
diabetes.trainLabels <- diabetes[ind==1,9]
print(diabetes.testLabels)
print(diabetes.trainLabels)
diabetes_pred1 <- knn(train = diabetes.training, test = diabetes.test, cl = diabetes.trainLabels, k=1)
diabetes_pred3 <- knn(train = diabetes.training, test = diabetes.test, cl = diabetes.trainLabels, k=3)
diabetes_pred5 <- knn(train = diabetes.training, test = diabetes.test, cl = diabetes.trainLabels, k=5)
diabetes_pred11 <- knn(train = diabetes.training, test = diabetes.test, cl = diabetes.trainLabels, k=11)
diabetes_pred1
diabetesTestLabels <- data.frame(diabetes.testLabels)
merge1 <- data.frame(diabetes_pred1, diabetes.testLabels)
merge3 <- data.frame(diabetes_pred3, diabetes.testLabels)
merge5 <- data.frame(diabetes_pred5, diabetes.testLabels)
merge11 <- data.frame(diabetes_pred11, diabetes.testLabels)
names(merge1) <- c("Predicted Class", "Observed Class")
names(merge3) <- c("Predicted Class", "Observed Class")
names(merge5) <- c("Predicted Class", "Observed Class")
names(merge11) <- c("Predicted Class", "Observed Class")
merge1
merge3
merge5
merge11
merge11
m <- naiveBayes(iris[,-5], iris[,5])
install.packages("naiveBayes")
install.packages("naivebayes")
package(naivebayes)
library(naivebayes)
m <- naiveBayes(iris[,-5], iris[,5])
m <- naivebayes(iris[,-5], iris[,5])
m <- naive_bayes(iris[,-5], iris[,5])
View(m)
install.packages("naiveBayes")
m
m
table(predict(m, iris[,-5]), iris[,5])
data("iris")
m <- naiveBayes(Species ~ ., data = iris)
m <- naive_bayes(Species ~ ., data = iris)
m
iris[,-5]
iris
iris[,5]
library(e1071)
install.packages("e1071")
library(e1071)
m <- naiveBayes(Species ~ ., data = iris)
m
table(predict(m, iris[,-5]), iris[,5])
predict(m, iris[,-5]), iris[,5])
predict(m, iris[,-5])
m
predict(m, iris[,-5])
table(predict(m, iris[,-5]), iris[,5])
View(diabetes_norm)
View(diabetes.test)
View(diabetes.training)
View(diabetes.test)
diabetes_norm.test <- as.data.frame(lapply(diabetes.test[1:8], normalize))
diabetes_norm.training <- as.data.frame(lapply(diabetes.training[1:8], normalize))
iris[,-5]
m <- naiveBayes(diabetes_norm.test, diabetes.testLabels)
m <- naiveBayes(diabetes_norm.training, diabetes.testLabels)
m <- naiveBayes(diabetes_norm.test, diabetes.testLabels)
m <- naiveBayes(diabetes_norm.test, diabetes.trainLabels)
m <- naiveBayes(diabetes_norm.training, diabetes.trainLabels)
table(predict(m, diabetes_norm.test), diabetes.testLabels)
nBayesTestTable <- table(predict(m, diabetes_norm.test), diabetes.testLabels)
nBayesTrainingNormDiabetesFormula <- naiveBayes(diabetes_norm.training, diabetes.trainLabels)
nBayesTestTable <- table(predict(nBayesTrainingNormDiabetesFormula, diabetes_norm.test), diabetes.testLabels)
nBayesTestTable
merge11
model_knn <- train(iris.training[, 1:4], iris.training[, 5], method='knn')
train
library(gmodels)
install.packages("gmodels")
library(gmodels)
model_knn <- train(iris.training[, 1:4], iris.training[, 5], method='knn')
